version: '3.9'

services:
  frontend:
    build:
      context: ./careerlens-frontend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - BACKEND_API_URL=http://backend:3000
    depends_on:
      - backend
    networks:
      - app-network

  datacollector:
    build:
      context: ./careerlens-datacollector
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    networks:
      - app-network

  backend:
    build:
      context: ./careerlens-backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - CORS_FRONTEND=http://localhost:4000
      - DB_CONN_STRING=mongodb://mongodb:27017
      - DB_NAME=careerlensdb
      - JOB_COLLECTION_NAME=NoFilterDoc
      - KAFKA_BROKER=kafka:9092
      - KAFKA_CLIENT_ID=backend
    depends_on:
      - mongodb
    networks:
      - app-network

  mongodb:
    image: mongo:6
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-network

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_KRAFT_MODE: "true"  # This enables KRaft mode in Kafka.
      KAFKA_PROCESS_ROLES: controller,broker  # Kafka acts as both broker and controller.
      KAFKA_NODE_ID: 1  # A unique ID for this Kafka instance.
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"  # Defines the controller voters.
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LOG_DIRS: /var/lib/kafka/data  # Where Kafka stores its logs.
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Kafka will automatically create topics if needed.
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1  # Since weâ€™re running one broker, one replica is enough.
      KAFKA_LOG_RETENTION_HOURS: 168  # Keep logs for 7 days.
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0  # No delay for consumer rebalancing.
      CLUSTER_ID: "Mk3OEYBSD34fcwNTJENDM2Qk"  # A unique ID for the Kafka cluster.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./data:/var/lib/kafka/data  # Store Kafka logs on your local machine.
    networks:
      - app-network
  ui:
    image: provectuslabs/kafka-ui:v0.4.0
    ports:
      - "8083:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    networks:
      - app-network

volumes:
  mongo-data:
    driver: local
  kafka-data:

networks:
  app-network:
    driver: bridge
